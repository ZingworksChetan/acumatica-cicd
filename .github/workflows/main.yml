name: Deploy Package

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - LOCAL
          - DEV
          - QA
          - STG
          - PROD
      version:
        description: 'Version to deploy'
        required: false
        default: '1.0.0'
      projectName:
        description: 'Project Name for the ZipFile to deploy'
        required: false
      delete-previous:
        type: boolean
        description: 'Delete previous deployment'
        required: false
        default: false

jobs:
  deploy-local:
    runs-on: self-hosted  # Use your self-hosted Windows runner
    if: github.event.inputs.environment == 'LOCAL'
    environment: LOCAL

    steps:
      - name: üõ†Ô∏è Checkout code
        uses: actions/checkout@v4

      - name: üõ†Ô∏è Set PowerShell Execution Policy
        run: Set-ExecutionPolicy RemoteSigned -Scope Process -Force
        shell: pwsh

      - name: üõ†Ô∏è Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: üõ†Ô∏è Install dependencies
        run: npm install
        shell: pwsh

      - name: üõ†Ô∏è Build project
        run: npm run build:ci
        shell: pwsh
      
      # - name: üìÇ List files in directory
      #   run: dir /s /b  # Windows command equivalent of 'ls -lR'
      #   shell: pwsh
      
      - name: üì¶ Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-build
          path: build  

      - name: üöÄ Deploy to Local Acumatica
        run: npm run deploy:local
        shell: pwsh
        env:
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
          AC_TENANT: ${{ vars.AC_TENANT }}
          AC_BRANCH: ${{ vars.AC_BRANCH }}
          AC_BASE_URL: ${{ vars.AC_BASE_URL }}
          PROJECT_NAME: ${{ github.event.inputs.projectName }}
          PROJECT_DESCRIPTION: ${{ vars.PROJECT_DESCRIPTION }}
          PROJECT_LEVEL: ${{ vars.PROJECT_LEVEL }}